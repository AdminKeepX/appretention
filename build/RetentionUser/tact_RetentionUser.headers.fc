;;
;; Header files for RetentionUser
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_slice
(cell, ()) __tact_dict_set_int_slice(cell d, int kl, int k, slice v) inline;

;; __tact_dict_get_int_slice
slice __tact_dict_get_int_slice(cell d, int kl, int k) inline;

;; __tact_dict_min_int_slice
(int, slice, int) __tact_dict_min_int_slice(cell d, int kl) inline;

;; __tact_dict_next_int_slice
(int, slice, int) __tact_dict_next_int_slice(cell d, int kl, int pivot) inline;

;; __tact_string_builder_start
tuple __tact_string_builder_start(builder b) inline;

;; __tact_string_builder_start_string
tuple __tact_string_builder_start_string() inline;

;; __tact_string_builder_end
cell __tact_string_builder_end(tuple builders) inline;

;; __tact_string_builder_end_slice
slice __tact_string_builder_end_slice(tuple builders) inline;

;; __tact_string_builder_append
((tuple), ()) __tact_string_builder_append(tuple builders, slice sc) inline_ref;

;; __tact_int_to_string
slice __tact_int_to_string(int src) inline_ref;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $InternalRefundContractCreated$_load
(slice, ((slice, int, int))) $InternalRefundContractCreated$_load(slice sc_0) inline;

;; $InternalRefundContractClosed$_load
(slice, ((slice, int, int))) $InternalRefundContractClosed$_load(slice sc_0) inline;

;; $RetentionUser$_store
builder $RetentionUser$_store(builder build_0, (slice, slice, cell, int, int) v) inline;

;; $RetentionUser$_load
(slice, ((slice, slice, cell, int, int))) $RetentionUser$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $RetentionUser$init$_load
(slice, ((slice, slice))) $RetentionUser$init$_load(slice sc_0) inline;

;; $RetentionUser$_contract_init
(slice, slice, cell, int, int) $RetentionUser$_contract_init(slice $parent, slice $owner) impure inline_ref;

;; $RetentionUser$_contract_load
(slice, slice, cell, int, int) $RetentionUser$_contract_load() impure inline_ref;

;; $RetentionUser$_contract_store
() $RetentionUser$_contract_store((slice, slice, cell, int, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $RetentionUser$_fun_currentLocked
((slice, slice, cell, int, int), int) $RetentionUser$_fun_currentLocked((slice, slice, cell, int, int) $self) impure inline_ref;

;; $RetentionUser$_fun_allTimeLocked
((slice, slice, cell, int, int), int) $RetentionUser$_fun_allTimeLocked((slice, slice, cell, int, int) $self) impure inline_ref;

;; $RetentionUser$_fun_allTimeRefunded
((slice, slice, cell, int, int), int) $RetentionUser$_fun_allTimeRefunded((slice, slice, cell, int, int) $self) impure inline_ref;

;; $RetentionUser$_fun_addressForKey
((slice, slice, cell, int, int), slice) $RetentionUser$_fun_addressForKey((slice, slice, cell, int, int) $self, int $key) impure inline_ref;

;; $RetentionUser$_fun_allKeys
((slice, slice, cell, int, int), slice) $RetentionUser$_fun_allKeys((slice, slice, cell, int, int) $self) impure inline_ref;

;; $RetentionUser$_fun_allItems
((slice, slice, cell, int, int), cell) $RetentionUser$_fun_allItems((slice, slice, cell, int, int) $self) impure inline_ref;

;; $RetentionUser$_fun_forward
((slice, slice, cell, int, int), ()) $RetentionUser$_fun_forward((slice, slice, cell, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $RetentionUser$_fun_notify
((slice, slice, cell, int, int), ()) $RetentionUser$_fun_notify((slice, slice, cell, int, int) $self, cell $body) impure inline;

;; $RetentionUser$_fun_owner
((slice, slice, cell, int, int), slice) $RetentionUser$_fun_owner((slice, slice, cell, int, int) $self) impure inline_ref;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
