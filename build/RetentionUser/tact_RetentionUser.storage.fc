;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

((cell, cell)) $StateInit$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (cell vvv'code, cell vvv'data) = __tact_tuple_destroy_2(v);
    return (vvv'code, vvv'data);
}

;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

;;
;; Type: Deploy
;; Header: 0x946a98b6
;; TLB: deploy#946a98b6 queryId:uint64 = Deploy
;;

(slice, ((int))) $Deploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: DeployOk
;; Header: 0xaff90f57
;; TLB: deploy_ok#aff90f57 queryId:uint64 = DeployOk
;;

builder $DeployOk$_store(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell $DeployOk$_store_cell((int) v) inline {
    return $DeployOk$_store(begin_cell(), v).end_cell();
}

((int)) $DeployOk$_constructor_queryId(int queryId) inline {
    return (queryId);
}

;;
;; Type: InternalRefundContractCreated
;; Header: 0x4ad1d84c
;; TLB: internal_refund_contract_created#4ad1d84c contract:address amount:uint64 index:uint32 = InternalRefundContractCreated
;;

(slice, ((slice, int, int))) $InternalRefundContractCreated$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1255266380);
    var v'contract = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    var v'index = sc_0~load_uint(32);
    return (sc_0, (v'contract, v'amount, v'index));
}

;;
;; Type: InternalRefundContractClosed
;; Header: 0xa947ee4f
;; TLB: internal_refund_contract_closed#a947ee4f contract:address amount:uint64 index:uint32 = InternalRefundContractClosed
;;

(slice, ((slice, int, int))) $InternalRefundContractClosed$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2840063567);
    var v'contract = sc_0~__tact_load_address();
    var v'amount = sc_0~load_uint(64);
    var v'index = sc_0~load_uint(32);
    return (sc_0, (v'contract, v'amount, v'index));
}

;;
;; Type: RetentionUser
;;

builder $RetentionUser$_store(builder build_0, (slice, slice, cell, int, int) v) inline {
    var (v'parent, v'owner, v'contractsMap, v'refunded, v'all_time_locked) = v;
    build_0 = __tact_store_address(build_0, v'parent);
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = build_0.store_dict(v'contractsMap);
    build_0 = build_0.store_uint(v'refunded, 64);
    build_0 = build_0.store_uint(v'all_time_locked, 64);
    return build_0;
}

(slice, ((slice, slice, cell, int, int))) $RetentionUser$_load(slice sc_0) inline {
    var v'parent = sc_0~__tact_load_address();
    var v'owner = sc_0~__tact_load_address();
    var v'contractsMap = sc_0~load_dict();
    var v'refunded = sc_0~load_uint(64);
    var v'all_time_locked = sc_0~load_uint(64);
    return (sc_0, (v'parent, v'owner, v'contractsMap, v'refunded, v'all_time_locked));
}

(slice, ((slice, slice))) $RetentionUser$init$_load(slice sc_0) inline {
    var v'parent = sc_0~__tact_load_address();
    var v'owner = sc_0~__tact_load_address();
    return (sc_0, (v'parent, v'owner));
}

(slice, slice, cell, int, int) $RetentionUser$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$RetentionUser$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (slice parent, slice owner) = $sc~$RetentionUser$init$_load();
        $sc.end_parse();
        return $RetentionUser$_contract_init(parent, owner);
    }
}

() $RetentionUser$_contract_store((slice, slice, cell, int, int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $RetentionUser$_store(b, v);
    set_data(b.end_cell());
}